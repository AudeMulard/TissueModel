import numpy as np
from scipy.spatial import Voronoi, voronoi_plot_2d

def select_network(network,creation):
		
		if creation == "Voronoi":
			Seeds=np.random.rand(network.complexity,network.dimension)*network.length
			voronoi = Voronoi(Seeds)
			vertices = Voronoi(Seeds).vertices
			ridge_vertices = Voronoi(Seeds).ridge_vertices
			return vertices, ridge_vertices

		if creation == "big grid":
			vertices = np.array([[0.0,0.25],[0.0,0.5],[0.0,0.75],[0.25,0.0],[0.25,0.25],[0.25,0.5],[0.25,0.75],[0.25,1.0],[0.5,0.0],[0.5,0.25],[0.5,0.5],[0.5,0.75],[0.5,1.0],[0.75,0.0],[0.75,0.25],[0.75,0.5],[0.75,0.75],[0.75,1.0],[1.0,0.25],[1.0,0.5],[1.0,0.75]])
			ridge_vertices = np.array([[0,4],[4,9],[9,14],[14,18],[1,5],[5,10],[10,15],[15,19],[2,6],[6,11],[11,16],[16,20],[3,4],[4,5],[5,6],[6,7],[8,9],[9,10],[10,11],[11,12],[13,14],[14,15],[15,16],[16,17]])
			return vertices, ridge_vertices

		if creation == "small grid":
			vertices = np.array([[0.0,0.33],[0.0,0.66],[0.33,0.0],[0.33,0.33],[0.33,0.66],[0.33,1.0],[0.66,0.0],[0.66,0.33],[0.66,0.66],[0.66,1.0],[1.0,0.33],[1.0,0.66]])
			ridge_vertices = np.array([[0,3],[3,7],[7,10],[1,4],[4,8],[8,11],[2,3],[3,4],[4,5],[6,7],[7,8],[8,9]])
			return vertices, ridge_vertices

		if creation == "1 straight line":
			vertices = np.array([[0.0,0.0],[0.5,0.0],[1.0,0.0]])
			ridge_vertices = np.array([[0,1],[1,2]])
			return vertices, ridge_vertices

		if creation == "1 long straight line":
			vertices = np.array([[0.0,0.0],[0.25,0.0],[0.5,0.0],[0.75,0.0],[1.0,0.0]])
			ridge_vertices = np.array([[0,1],[1,2],[2,3],[3,4]])
			return vertices, ridge_vertices

		if creation == "1 long cross":
			vertices = np.array([[0.0,0.5],[0.5,0.5],[1.0,0.5],[0.5,0.0],[0.5,0.25],[0.5,0.75],[0.5,1.0]])
			ridge_vertices = np.array([[0,1],[1,2],[3,4],[4,1],[1,5],[5,6]])
			return vertices, ridge_vertices

		if creation == "1 half long cross":
			vertices = np.array([[0.0,0.5],[0.25,0.5],[0.5,0.5],[0.75,0.5],[1.0,0.5],[0.5,0.25],[0.5,0.75]])
			ridge_vertices = np.array([[0,1],[1,2],[2,3],[3,4],[5,6],[5,2],[2,6]])
			return vertices, ridge_vertices

		if creation == "2 manual":
			vertices = np.array([[0.0,0.0],[0.3,0.5],[1.0,0.0]])
			ridge_vertices = np.array([[0,1],[1,2]])
			return vertices, ridge_vertices

		if creation == "3 manual":
			vertices = np.array([[0.0,0.0],[0.3,0.1],[0.6,0.3],[1.0,0.0]])
			ridge_vertices = np.array([[0,1],[1,2],[2,3]])
			return vertices, ridge_vertices

		if creation == "1 straight line":
			vertices = np.array([[0.0,0.0],[0.5,0.0],[1.0,0.0]])
			ridge_vertices = np.array([[0,1],[1,2]])
			return vertices, ridge_vertices

		if creation == "symmetric cross":
			vertices = np.array([[0.0,0.0],[0.5,0.0],[1.0,0.5],[1.0,-0.5]])
			ridge_vertices = np.array([[0,1],[1,2],[1,3]])
#			self.vertices_ini = np.array(self.vertices.tolist())
			return vertices, ridge_vertices
	
		if creation == "asymmetric cross":
			vertices = np.array([[0.0,0.0],[0.7,-0.1],[1.0,0.2],[1.0,-0.3]])
			ridge_vertices = np.array([[0,1],[1,2],[1,3]])
			return vertices, ridge_vertices

		if creation == "symmetric double point cross":
			vertices = np.array([[0.0,0.0],[0.0,1.0],[0.61,0.5],[0.69,0.5],[1.0,0.0],[1.0,1.0]])
			ridge_vertices = np.array([[0,2],[1,2],[2,3],[3,5],[3,4]])
			return vertices, ridge_vertices

		if creation == "asymmetric double point cross":
			vertices = np.array([[-1.0,0.0],[-0.6,1.0],[0.19, 0.45],[0.22,0.51], [0.20,0.55],[0.69,0.62],[1.3,0.0],[2.0,1.0]])
			ridge_vertices = np.array([[0,2],[1,3],[2,3],[2,4],[3,4],[4,5],[4,6],[5,6],[5,7]])
			return vertices, ridge_vertices

		if creation == "random network":
			vertices = np.array([[6.96810003e-01,5.85972462e-01], [  6.12222074e-01,   5.70042014e-01], [  1.53524456e-02,   8.24030940e-01], [  2.02945404e-02,   3.95001038e-01], [  5.91361447e-02,   6.07631016e-01], [  2.17734065e-01,   4.04153611e-01], [  1.00918445e-01,   6.11192022e-01], [  7.60619750e-01,  -4.27877180e-02], [  6.42935772e-01,   1.57907165e-01], [  8.73596877e-01,   3.18524365e-01], [  8.51906402e-01,   3.31465928e-01], [  4.47723467e-01,   3.51768688e-02], [  5.85307175e-01,   2.02853812e-01], [  4.64801092e-01,   3.75003275e-01], [  4.15171979e-01,   3.63331353e-01], [  3.16687341e-01,   1.87921226e-01], [  2.91696122e-01,   2.93138477e-01], [  3.09155556e-01,   3.21897785e-01], [  5.91396931e-01,   5.94012634e-01], [  8.14387805e-01,   1.72239083e+01], [  3.15164596e-01,   9.25079572e-01], [  1.13885589e-01,   6.27208867e-01], [  3.00439561e-01,   5.75803663e-01], [  4.17769233e-01,   7.61100709e-01], [  3.17801428e-01,   8.99124444e-01], [  2.97685323e-01,   6.19842149e-01], [  1.43974960e-01,   6.85770872e-01], [  1.24611979e-01,   6.43587311e-01]])
			ridge_vertices=np.array([[-1, 4], [-1, 3], [3, 4], [3, 5], [4, 6], [5, 6], [7, 9], [7, 8], [8, 10], [9, 10], [-1, 9], [-1, 7], [-1, 0], [0, 10], [11, 15], [11, 12], [12, 13], [13, 14], [14, 17], [15, 16], [16, 17], [-1, 15], [-1, 11], [8, 12], [0, 1], [1, 13], [-1, 16], [5, 17], [-1, 19], [1, 18], [18, 19], [-1, 2], [2, 20], [19, 20], [6, 21], [14, 22], [21, 22], [23, 24], [23, 25], [24, 26], [25, 27], [26, 27], [18, 23], [20, 24], [22, 25], [2, 26], [21, 27]])
			return vertices, ridge_vertices

		if creation == "1 straight line 2":
			vertices = np.array([[-1.0,0.0],[0.5,0.0],[1.5,0.0]])
			ridge_vertices = np.array([[0,1],[1,2]])
			return vertices, ridge_vertices

		if creation == "symmetric cross 2":
			vertices = np.array([[-1.0,0.0],[0.5,0.0],[1.5,0.5],[1.5,-0.5]])
			ridge_vertices = np.array([[0,1],[1,2],[1,3]])
			return vertices, ridge_vertices

		if creation == "random network 2":
			vertices = np.array([[ 0.6886007,   1.22144112], [ 0.69731848,  1.1186779 ], [ 0.51616784,  0.63207458], [-0.25276059,  0.45293642], [ 0.49692315, -1.5152983 ], [ 0.34634344,  0.13602371], [ 0.33809343,  0.80025459], [ 0.19167735,  0.81100432], [-0.08463533,  0.51910635], [ 1.42874148,  0.32477703], [ 0.44490991,  0.64721725], [ 0.3765596,   0.67967657], [ 0.22545142,  0.52383797], [ 0.71710902,  1.04705891], [ 1.28244566,  0.44924527], [ 0.75903549,  0.8663037 ], [ 0.52775066,  0.61855448], [ 0.67122359, 0.02915664], [ 0.571157,    0.21613333], [ 0.36876754,  0.43831976], [ 0.35649777,  0.43378642],[ 0.54799455,  0.46092557], [ 0.56521616,  0.44491184], [ 0.51447422,  0.24044857], [ 0.34884099,  0.19190268], [ 0.3510838,   0.18885809], [ 0.61471224,  0.44134212], [ 0.84182501,  0.33648427], [ 0.75687701,  0.64930453], [ 0.74807286,  0.64506609], [ 1.05464284,  0.36505829], [ 0.91089201,  0.3296533 ]])
			ridge_vertices = np.array([[-1, 4], [-1, 5], [4, 5], [0, 6], [-1, 0], [-1, 7], [6, 7], [-1, 3], [3, 8], [7, 8], [0, 1], [1, 2], [2, 10], [6, 11], [10, 11], [8, 12], [11, 12], [13, 15], [13, 14], [14, 15], [-1, 9], [1, 13], [9, 14], [19, 20], [19, 21], [20, 24], [21, 22], [22, 23], [23, 25], [24, 25], [10, 19], [12, 20], [2, 16], [16, 21], [3, 24], [4, 17], [5, 25], [17, 18], [18, 23], [26, 29], [26, 27], [27, 31], [28, 30], [28, 29], [30, 31], [16, 29], [22, 26], [18, 27], [17, 31], [9, 30], [15, 28]])
			return vertices, ridge_vertices

		if creation == "random network 3":
			vertices = np.array([[ 0.96747413,  1.30350344], [ 0.71732007, -1.68553583], [ 0.66949702,  0.53769709], [ 0.26746628,  1.05725235], [ 0.22433102,  0.92974385], [ 0.54132183,  0.63446214], [ 0.37429159,  0.5678483 ], [ 1.25975916,  0.35115262], [ 0.77160248,  0.67884074], [ 0.68232243,  0.54247464], [ 0.66374711,  0.52136863], [ 0.58848258, -0.16118395], [ 0.16895845,  0.69422255], [-0.17027436,  0.82316349], [ 0.51283584,  0.69352915], [ 0.57329291,  0.90709476], [ 0.40196155,  0.94183993], [ 0.4250409,   0.32231426], [ 0.40522241,  0.19204137], [ 0.25371474,  0.4674381 ], [ 0.14688212,  0.47416062], [ 0.07251124,  0.23379788], [-0.043192,    0.33432779], [ 1.14379205,  0.31863161], [ 0.67418869,  0.0693474 ], [ 0.71738841,  0.23097817], [ 0.41781785,  0.77486727], [ 0.50973872,  0.69527462], [ 0.23891247,  0.82375975], [ 0.1903611,   0.71261965], [ 0.25607053,  0.68906206]])
			ridge_vertices = np.array([[-1, 7], [-1, 8], [7, 9], [8, 9], [-1, 0], [0, 8], [-1, 3], [3, 4], [4, 13], [-1, 13], [0, 15], [2, 9], [2, 5], [5, 14], [14, 15], [3, 16], [15, 16], [17, 18], [17, 19], [18, 21], [19, 20], [20, 22], [21, 22], [2, 10], [5, 6], [6, 19], [10, 17], [1, 11], [1, 21], [11, 18], [12, 13], [12, 20], [-1, 22], [-1, 1], [23, 25], [23, 24], [24, 25], [7, 23], [10, 25], [11, 24], [26, 27], [26, 28], [27, 30], [28, 29], [29, 30], [14, 27], [16, 26], [4, 28], [6, 30], [12, 29]])
			return vertices, ridge_vertices
