import numpy as np
from scipy.spatial import Voronoi, voronoi_plot_2d

def select_network(network,creation):
		
		if creation == "Voronoi":
			Seeds=np.random.rand(network.complexity,network.dimension)*network.length
			voronoi = Voronoi(Seeds)
			vertices = Voronoi(Seeds).vertices
			ridge_vertices = Voronoi(Seeds).ridge_vertices
			if network.dimension == 3:
				new_ridge_vertices = []
				for ridge in ridge_vertices:
					for i in range(len(ridge)-1):
					#	if [ridge[i],ridge[i+1]] not in np.array(new_ridge_vertices) or [ridge[i+1],ridge[i]] not in np.array(new_ridge_vertices):
							new_ridge_vertices.append([ridge[i],ridge[i+1]])
				ridge_vertices = new_ridge_vertices
			return vertices, ridge_vertices

		if creation == "big grid":
			vertices = np.array([[0.0,0.25],[0.0,0.5],[0.0,0.75],[0.25,0.0],[0.25,0.25],[0.25,0.5],[0.25,0.75],[0.25,1.0],[0.5,0.0],[0.5,0.25],[0.5,0.5],[0.5,0.75],[0.5,1.0],[0.75,0.0],[0.75,0.25],[0.75,0.5],[0.75,0.75],[0.75,1.0],[1.0,0.25],[1.0,0.5],[1.0,0.75]])
			ridge_vertices = np.array([[0,4],[4,9],[9,14],[14,18],[1,5],[5,10],[10,15],[15,19],[2,6],[6,11],[11,16],[16,20],[3,4],[4,5],[5,6],[6,7],[8,9],[9,10],[10,11],[11,12],[13,14],[14,15],[15,16],[16,17]])
			return vertices, ridge_vertices

		if creation == "small grid":
			vertices = np.array([[0.0,0.33],[0.0,0.66],[0.33,0.0],[0.33,0.33],[0.33,0.66],[0.33,1.0],[0.66,0.0],[0.66,0.33],[0.66,0.66],[0.66,1.0],[1.0,0.33],[1.0,0.66]])
			ridge_vertices = np.array([[0,3],[3,7],[7,10],[1,4],[4,8],[8,11],[2,3],[3,4],[4,5],[6,7],[7,8],[8,9]])
			return vertices, ridge_vertices

		if creation == "1 straight line":
			vertices = np.array([[0.0,0.0],[0.5,0.0],[1.0,0.0]])
			ridge_vertices = np.array([[0,1],[1,2]])
			return vertices, ridge_vertices

		if creation == "1 long straight line":
			vertices = np.array([[0.0,0.0],[0.25,0.0],[0.5,0.0],[0.75,0.0],[1.0,0.0]])
			ridge_vertices = np.array([[0,1],[1,2],[2,3],[3,4]])
			return vertices, ridge_vertices

		if creation == "1 long cross":
			vertices = np.array([[0.0,0.5],[0.5,0.5],[1.0,0.5],[0.5,0.0],[0.5,0.25],[0.5,0.75],[0.5,1.0]])
			ridge_vertices = np.array([[0,1],[1,2],[3,4],[4,1],[1,5],[5,6]])
			return vertices, ridge_vertices

		if creation == "1 half long cross":
			vertices = np.array([[0.0,0.5],[0.25,0.5],[0.5,0.5],[0.75,0.5],[1.0,0.5],[0.5,0.25],[0.5,0.75]])
			ridge_vertices = np.array([[0,1],[1,2],[2,3],[3,4],[5,6],[5,2],[2,6]])
			return vertices, ridge_vertices

		if creation == "2 manual":
			vertices = np.array([[0.0,0.0],[0.3,0.5],[1.0,0.0]])
			ridge_vertices = np.array([[0,1],[1,2]])
			return vertices, ridge_vertices

		if creation == "3 manual":
			vertices = np.array([[0.0,0.0],[0.3,0.1],[0.6,0.3],[1.0,0.0]])
			ridge_vertices = np.array([[0,1],[1,2],[2,3]])
			return vertices, ridge_vertices

		if creation == "1 straight line":
			vertices = np.array([[0.0,0.0],[0.5,0.0],[1.0,0.0]])
			ridge_vertices = np.array([[0,1],[1,2]])
			return vertices, ridge_vertices

		if creation == "symmetric cross":
			vertices = np.array([[0.0,0.0],[0.5,0.0],[1.0,0.5],[1.0,-0.5]])
			ridge_vertices = np.array([[0,1],[1,2],[1,3]])
#			self.vertices_ini = np.array(self.vertices.tolist())
			return vertices, ridge_vertices
	
		if creation == "asymmetric cross":
			vertices = np.array([[0.0,0.0],[0.7,-0.1],[1.0,0.2],[1.0,-0.3]])
			ridge_vertices = np.array([[0,1],[1,2],[1,3]])
			return vertices, ridge_vertices

		if creation == "symmetric double point cross":
			vertices = np.array([[0.0,0.0],[0.0,1.0],[0.61,0.5],[0.69,0.5],[1.0,0.0],[1.0,1.0]])
			ridge_vertices = np.array([[0,2],[1,2],[2,3],[3,5],[3,4]])
			return vertices, ridge_vertices

		if creation == "asymmetric double point cross":
			vertices = np.array([[-1.0,0.0],[-0.6,1.0],[0.19, 0.45],[0.22,0.51], [0.20,0.55],[0.69,0.62],[1.3,0.0],[2.0,1.0]])
			ridge_vertices = np.array([[0,2],[1,3],[2,3],[2,4],[3,4],[4,5],[4,6],[5,6],[5,7]])
			return vertices, ridge_vertices

		if creation == "random network":
			vertices = np.array([[6.96810003e-01,5.85972462e-01], [  6.12222074e-01,   5.70042014e-01], [  1.53524456e-02,   8.24030940e-01], [  2.02945404e-02,   3.95001038e-01], [  5.91361447e-02,   6.07631016e-01], [  2.17734065e-01,   4.04153611e-01], [  1.00918445e-01,   6.11192022e-01], [  7.60619750e-01,  -4.27877180e-02], [  6.42935772e-01,   1.57907165e-01], [  8.73596877e-01,   3.18524365e-01], [  8.51906402e-01,   3.31465928e-01], [  4.47723467e-01,   3.51768688e-02], [  5.85307175e-01,   2.02853812e-01], [  4.64801092e-01,   3.75003275e-01], [  4.15171979e-01,   3.63331353e-01], [  3.16687341e-01,   1.87921226e-01], [  2.91696122e-01,   2.93138477e-01], [  3.09155556e-01,   3.21897785e-01], [  5.91396931e-01,   5.94012634e-01], [  8.14387805e-01,   1.72239083e+01], [  3.15164596e-01,   9.25079572e-01], [  1.13885589e-01,   6.27208867e-01], [  3.00439561e-01,   5.75803663e-01], [  4.17769233e-01,   7.61100709e-01], [  3.17801428e-01,   8.99124444e-01], [  2.97685323e-01,   6.19842149e-01], [  1.43974960e-01,   6.85770872e-01], [  1.24611979e-01,   6.43587311e-01]])
			ridge_vertices=np.array([[-1, 4], [-1, 3], [3, 4], [3, 5], [4, 6], [5, 6], [7, 9], [7, 8], [8, 10], [9, 10], [-1, 9], [-1, 7], [-1, 0], [0, 10], [11, 15], [11, 12], [12, 13], [13, 14], [14, 17], [15, 16], [16, 17], [-1, 15], [-1, 11], [8, 12], [0, 1], [1, 13], [-1, 16], [5, 17], [-1, 19], [1, 18], [18, 19], [-1, 2], [2, 20], [19, 20], [6, 21], [14, 22], [21, 22], [23, 24], [23, 25], [24, 26], [25, 27], [26, 27], [18, 23], [20, 24], [22, 25], [2, 26], [21, 27]])
			return vertices, ridge_vertices

		if creation == "1 straight line 2":
			vertices = np.array([[-1.0,0.0],[0.5,0.0],[1.5,0.0]])
			ridge_vertices = np.array([[0,1],[1,2]])
			return vertices, ridge_vertices

		if creation == "symmetric cross 2":
			vertices = np.array([[-1.0,0.0],[0.5,0.0],[1.5,0.5],[1.5,-0.5]])
			ridge_vertices = np.array([[0,1],[1,2],[1,3]])
			return vertices, ridge_vertices

		if creation == "random network 2":
			vertices = np.array([[ 0.6886007,   1.22144112], [ 0.69731848,  1.1186779 ], [ 0.51616784,  0.63207458], [-0.25276059,  0.45293642], [ 0.49692315, -1.5152983 ], [ 0.34634344,  0.13602371], [ 0.33809343,  0.80025459], [ 0.19167735,  0.81100432], [-0.08463533,  0.51910635], [ 1.42874148,  0.32477703], [ 0.44490991,  0.64721725], [ 0.3765596,   0.67967657], [ 0.22545142,  0.52383797], [ 0.71710902,  1.04705891], [ 1.28244566,  0.44924527], [ 0.75903549,  0.8663037 ], [ 0.52775066,  0.61855448], [ 0.67122359, 0.02915664], [ 0.571157,    0.21613333], [ 0.36876754,  0.43831976], [ 0.35649777,  0.43378642],[ 0.54799455,  0.46092557], [ 0.56521616,  0.44491184], [ 0.51447422,  0.24044857], [ 0.34884099,  0.19190268], [ 0.3510838,   0.18885809], [ 0.61471224,  0.44134212], [ 0.84182501,  0.33648427], [ 0.75687701,  0.64930453], [ 0.74807286,  0.64506609], [ 1.05464284,  0.36505829], [ 0.91089201,  0.3296533 ]])
			ridge_vertices = np.array([[-1, 4], [-1, 5], [4, 5], [0, 6], [-1, 0], [-1, 7], [6, 7], [-1, 3], [3, 8], [7, 8], [0, 1], [1, 2], [2, 10], [6, 11], [10, 11], [8, 12], [11, 12], [13, 15], [13, 14], [14, 15], [-1, 9], [1, 13], [9, 14], [19, 20], [19, 21], [20, 24], [21, 22], [22, 23], [23, 25], [24, 25], [10, 19], [12, 20], [2, 16], [16, 21], [3, 24], [4, 17], [5, 25], [17, 18], [18, 23], [26, 29], [26, 27], [27, 31], [28, 30], [28, 29], [30, 31], [16, 29], [22, 26], [18, 27], [17, 31], [9, 30], [15, 28]])
			return vertices, ridge_vertices

		if creation == "random network 3":
			vertices = np.array([[ 0.96747413,  1.30350344], [ 0.71732007, -1.68553583], [ 0.66949702,  0.53769709], [ 0.26746628,  1.05725235], [ 0.22433102,  0.92974385], [ 0.54132183,  0.63446214], [ 0.37429159,  0.5678483 ], [ 1.25975916,  0.35115262], [ 0.77160248,  0.67884074], [ 0.68232243,  0.54247464], [ 0.66374711,  0.52136863], [ 0.58848258, -0.16118395], [ 0.16895845,  0.69422255], [-0.17027436,  0.82316349], [ 0.51283584,  0.69352915], [ 0.57329291,  0.90709476], [ 0.40196155,  0.94183993], [ 0.4250409,   0.32231426], [ 0.40522241,  0.19204137], [ 0.25371474,  0.4674381 ], [ 0.14688212,  0.47416062], [ 0.07251124,  0.23379788], [-0.043192,    0.33432779], [ 1.14379205,  0.31863161], [ 0.67418869,  0.0693474 ], [ 0.71738841,  0.23097817], [ 0.41781785,  0.77486727], [ 0.50973872,  0.69527462], [ 0.23891247,  0.82375975], [ 0.1903611,   0.71261965], [ 0.25607053,  0.68906206]])
			ridge_vertices = np.array([[-1, 7], [-1, 8], [7, 9], [8, 9], [-1, 0], [0, 8], [-1, 3], [3, 4], [4, 13], [-1, 13], [0, 15], [2, 9], [2, 5], [5, 14], [14, 15], [3, 16], [15, 16], [17, 18], [17, 19], [18, 21], [19, 20], [20, 22], [21, 22], [2, 10], [5, 6], [6, 19], [10, 17], [1, 11], [1, 21], [11, 18], [12, 13], [12, 20], [-1, 22], [-1, 1], [23, 25], [23, 24], [24, 25], [7, 23], [10, 25], [11, 24], [26, 27], [26, 28], [27, 30], [28, 29], [29, 30], [14, 27], [16, 26], [4, 28], [6, 30], [12, 29]])
			return vertices, ridge_vertices

		if creation == "3d random":
			vertices = np.array([[0.43541636053539134, 0.48479506865381905, 0.08359299532551634], [0.847316260717825, -2.6992733151809327, -2.748604236146288], [4.555280597941178, -25.598664535005202, 20.474025094948892], [0.6124249755991946, 0.19258351807554563, 0.9407023773005005], [8.888374607498516, -32.4068687383592, 18.159318241836964], [0.8091079289655896, -1.1609188889116833, 0.7219161820716323], [1.0496844093796414, -1.27886200374963, 1.5733349951705917], [0.40247179164030567, 0.4965884357630875, 0.09398683969984228], [0.3361524315064658, 0.9964896184913732, 0.46137558461962824], [0.5506069559754749, 0.6520553703876247, 0.19895728578285726], [0.6522843379383924, 0.9114889324528676, 0.3821325087659942], [0.8186704583040733, 1.0339478605251524, 0.3513719741628449], [1.3740593045289717, 1.2091144482456206, 0.40143923753043287], [0.6881642995735078, 0.26796005052428123, 0.20642472481733082], [0.6918674283155608, 0.42031352678621264, 0.41275801432735804], [0.6159237214115648, 0.26705637049997366, 0.02990544789395161], [0.6634395862828303, 0.26255922686081806, 0.15409564067565074], [0.5073631410454555, 0.4526423623664299, 0.1149322864239882], [0.5121022086600522, 0.4498789603698179, 0.12244925457923889], [1.0358198090648891, 0.5592409049260715, 0.600259085800934], [0.748535438587277, 0.3090238909418985, 0.2899294280846253], [0.7004124715231369, 0.17424029648262832, 0.14354854416474305], [0.6849759871407086, 0.24653297365232055, 0.186951966894576], [0.6706336740213084, 0.250781788880184, 0.16112793104217693], [0.7373123873036591, -1.8524066677888742, -1.9092470201006435], [0.7129338192452586, -0.8561802638403099, 0.3426277930065933], [0.7290986073014526, -1.8322573148247212, -1.905410422188126], [0.6879436284042263, -1.6966083282346758, -1.8031853135677784], [0.6939116075002759, -1.242254327959159, -1.359422123229729], [0.6614783491033589, -0.673641255265455, 0.5013963769940349], [0.3338384644699613, 0.04122997262473693, 0.4418104462427454], [0.20187351852513874, 0.17351554934211944, -0.39826683293278364], [0.5177743625879243, -1.2905854844022775, -1.558783684174795], [0.2078466665662097, 0.13492194908278315, -0.4514386681571958], [0.32390298267335904, 0.059015722421287234, 0.4445675405181982], [0.1418278580001294, 0.22836216571566914, 0.6787077437233549], [-0.8309585902496087, 0.47905617974634024, 0.9484719208881927], [0.2981529903580067, 0.8646094002787749, 0.6291770521507316], [0.09630045789876651, 1.3762277477040359, 0.5421376581646495], [0.34574846925850866, 0.4870938256075987, 0.3635986074048576], [0.37083406809575137, 0.4751469857212129, 0.38074411066909586], [0.18940758180884562, 0.3596311171101668, 0.6134527326133381], [0.15164197506379928, 0.4116019808585851, 0.6086050590698457], [0.2584855181561825, 0.3061268617014724, 0.5243725725126426], [0.23017145344179002, 0.37506423518158205, 0.4500930105123292], [0.5735248840518349, 0.2862705136841784, 0.8573352484783303], [0.3935414911125097, 0.27296390485907684, 0.5858193918848382], [0.43605377886407193, 0.3085932626154535, 0.5595296883698887], [0.27865877023280516, 0.7580644132917707, 0.7112914632856644], [0.2150963419398878, 0.7334938845889968, 0.7916546157334732], [0.5894833600921063, 0.3147976947934349, 0.8809631962483038], [0.5462549611303492, 0.2583523576265695, 0.7307772701324672], [0.5514030652694633, 0.27528732105395415, 0.7064066664624942], [0.6222052465660205, 0.4333621978828102, 0.6808618184312456], [0.7743753019538534, 0.6867926755370121, 0.5652432225749986], [1.387681728800472, 1.1453092028187504, 1.2519307125450538], [0.5298580278538545, 0.6439206700843566, 0.7475191377705641], [0.7962445393757699, 0.5150472504390647, 0.5890080583436234], [1.6727378886991642, 1.078791609293169, 0.6597623815779281], [1.0458214130218584, 0.574088276039137, 0.6013184044949236], [1.2298444393786734, 0.8745762194348252, 0.5774462753064046], [0.49440429599209323, 0.6079389274423906, 0.7807406873202463], [0.605365119167503, 0.35694284660634445, 0.8475648198520135], [0.6330394723984135, 0.44724054377889383, 0.7196131005077373], [0.8594865503015406, 0.456666297073929, 0.6520670547139149], [1.021927839078295, 0.556110485743606, 0.6017203335614075], [0.8448662074469095, 0.5021537551832148, 0.5945345466496794], [0.4994880761388222, 0.47547178188071326, 1.2636302201090661], [0.5777946172271157, 0.3564679249686582, 0.8903981630651004], [0.459213815310222, 0.5510867494221502, 0.8886125615701953]])
			ridge_vertices = np.array([[-1, 33], [33, 0], [0, 9], [9, 11], [-1, 32], [32, 27], [27, 26], [26, 1], [-1, 12], [12, 15], [15, 28], [28, 26], [0, 33], [33, 32], [27, 28], [28, 15], [15, 17], [9, 17], [-1, 11], [11, 12], [26, 27], [32, 33], [-1, 2], [2, 35], [35, 36], [-1, 4], [4, 2], [4, 5], [5, 25], [25, 24], [24, 1], [1, 26], [26, 24], [2, 4], [5, 29], [29, 30], [30, 34], [34, 35], [25, 29], [24, 26], [27, 30], [30, 29], [29, 25], [27, 32], [32, 34], [34, 30], [-1, 36], [36, 35], [35, 34], [34, 32], [0, 7], [7, 31], [31, 33], [9, 10], [10, 8], [8, 7], [-1, 38], [38, 8], [8, 10], [10, 11], [7, 8], [8, 38], [38, -1], [-1, 31], [33, -1], [31, 44], [44, 39], [8, 37], [37, 48], [48, 39], [36, 42], [42, 49], [38, 37], [31, -1], [42, 44], [48, 49], [49, -1], [39, 48], [49, 42], [7, 39], [39, 40], [40, 18], [18, 17], [15, 16], [16, 18], [28, 23], [23, 16], [16, 23], [23, 47], [47, 40], [23, 28], [28, 27], [30, 46], [46, 47], [34, 43], [43, 46], [43, 44], [40, 47], [47, 46], [46, 43], [13, 16], [18, 14], [13, 22], [22, 52], [52, 53], [53, 14], [22, 23], [14, 53], [53, 40], [47, 52], [40, 53], [53, 52], [52, 47], [35, 41], [41, 43], [42, 41], [41, 42], [44, 43], [41, 45], [45, 3], [4, 6], [6, 3], [3, 6], [6, 5], [29, 51], [51, 45], [5, 6], [46, 51], [45, 51], [51, 46], [21, 24], [24, 25], [21, 22], [52, 51], [51, 29], [54, 57], [57, 66], [66, 65], [65, 59], [59, 60], [54, 56], [56, 55], [55, 58], [58, 60], [56, 61], [61, 63], [63, 57], [55, 67], [67, 69], [69, 61], [61, 56], [58, 59], [59, 65], [65, 64], [64, 62], [62, 68], [68, 67], [57, 63], [63, 62], [62, 64], [64, 66], [68, 69], [64, 65], [65, 66], [67, 68], [10, 54], [57, 14], [14, 18], [12, 60], [60, 54], [16, 13], [13, 20], [20, 19], [19, 59], [20, 66], [66, 57], [19, 20], [-1, 55], [-1, 58], [60, 12], [56, 37], [37, 56], [55, -1], [53, 63], [61, 48], [63, 61], [-1, 67], [69, 49], [48, 61], [61, 69], [-1, 19], [59, 58], [2, 3], [3, 50], [50, 68], [19, 65], [64, 6], [6, 4], [50, 62], [50, 45], [25, 21], [21, 20], [66, 64], [22, 21], [45, 50], [62, 63], [63, 53], [20, 21]])
			"""
			new_ridge_vertices = []
			for ridge in ridge_vertices:
				for i in range(len(ridge)-1):
				#	if [ridge[i],ridge[i+1]] not in new_ridge_vertices or [ridge[i+1],ridge[i]] not in new_ridge_vertices:
						new_ridge_vertices.append([ridge[i],ridge[i+1]])
			ridge_vertices = new_ridge_vertices
			"""
			return vertices, ridge_vertices
